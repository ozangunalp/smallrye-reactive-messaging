name: Run Kafka tests

on:
    workflow_dispatch:
        inputs:
            kafkaCLientVersion:
                description: 'Kafka Client version'
            kafkaBrokerVersion:
                description: 'Kafka Broker version'

jobs:
    tests:
        runs-on: ubuntu-latest
        name: Test with Kafka ${{ inputs.kafkaCLientVersion }} and Broker ${{ inputs.kafkaBrokerVersion }}
        steps:
            -   uses: actions/checkout@v4
            -   uses: actions/setup-java@v4
                with:
                    java-version: 21
                    distribution: temurin
                    cache: maven
            -   name: Build with Maven
                run: mvn -s .build/ci-maven-settings.xml clean install -T1C -DskipTests
            -   name: Run Kafka tests
                run: |
                    mvn -s .build/ci-maven-settings.xml -pl :smallrye-reactive-messaging-kafka -B verify \
                       ${{ inputs.kafkaCLientVersion == '' && '' || format('-Dkafka.version={0}', inputs.kafkaCLientVersion) }}  \
                       ${{ inputs.kafkaBrokerVersion == '' && '' || format('-Dkafka-container-version={0}', inputs.kafkaBrokerVersion) }}
    flaky-tests:
        runs-on: ubuntu-latest
        name: Flaky Test with Kafka ${{ inputs.kafkaCLientVersion }} and Broker ${{ inputs.kafkaBrokerVersion }}
        steps:
            -   uses: actions/checkout@v4
            -   uses: actions/setup-java@v4
                with:
                    java-version: 21
                    distribution: temurin
                    cache: maven
            -   name: Build with Maven
                run: mvn -s .build/ci-maven-settings.xml clean install -T1C -DskipTests
            -   name: Run Kafka tests
                run: |
                    mvn -s .build/ci-maven-settings.xml -pl :smallrye-reactive-messaging-kafka -B verify -Pslow-flaky-tests \
                       ${{ inputs.kafkaCLientVersion == '' && '' || format('-Dkafka.version={0}', inputs.kafkaCLientVersion) }}  \
                       ${{ inputs.kafkaBrokerVersion == '' && '' || format('-Dkafka-container-version={0}', inputs.kafkaBrokerVersion) }}
